C51 COMPILER V9.54   PING                                                                  03/19/2018 09:53:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PING
OBJECT MODULE PLACED IN .\Output\ping.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE Code\ping.c LARGE OPTIMIZE(4,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(
                    -FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\ping.lst) TABS(2) OBJECT(.\Output\ping.obj)

line level    source

   1          #include "ping.h"
   2          
   3          
   4          
   5          void TX_Phase_ProcessPing(void )
   6          {  
   7   1          RX_PACKET_STRUCTURE_S       *p_tx_receive_packet = NULL;
   8   1          
   9   1          TIMER_1ms_ENABLE(ENABLE);       //启动定时器
  10   1          if(sfod==2)                     //充电错误
  11   1          {
  12   2            LED1=1;
  13   2            Delay_ms(700);
  14   2            LED1=0;
  15   2            Delay_ms(1000);
  16   2          }
  17   1          Enable_coil_power();
  18   1          Delay_ms(TIMING_RX_WAKE_UP_TIME);
  19   1          Reset_Receive_Packet();
  20   1          t_ce_cnt_1ms = 0;
  21   1          do
  22   1          {
  23   2            
  24   2            if( t_ce_cnt_1ms >= 70)       //接收超时
  25   2            {
  26   3                      Delay_ms(10);
  27   3                      tx_phase = TX_PHASE_SELECT;
  28   3      #if FPDDET_EXITPT3TIMES_SUPPORT
  29   3                      exit_pt_info.pt_cnt=0; 
  30   3                      exit_pt_info.exit_pt_flag = 0;
  31   3      #endif          
  32   3                      sfod=0;
  33   3                      break; 
  34   3            }
  35   2           
  36   2            if(Receive_Packet(&p_tx_receive_packet)==1)     //等待接收完成
  37   2              continue;
  38   2            if( RX_PACKET_TYPE_SIGNAL_STRENGTH == p_tx_receive_packet->header)//SS  判断头
  39   2            {
  40   3              if(sfod==2)
  41   3              {
  42   4                tx_phase = TX_PHASE_SELECT; 
  43   4                break;
  44   4              }       
  45   3              printf("SS=%bu \n",p_tx_receive_packet->msg[0]);
  46   3      #if FPDDET_EXITPT3TIMES_SUPPORT       //？？？？？
  47   3              if((exit_pt_info.ss_last >= (p_tx_receive_packet->msg[0]+3))||
  48   3                (exit_pt_info.ss_last <= (p_tx_receive_packet->msg[0]-3)))    //判断充电电流是否有突变
  49   3              {
  50   4                exit_pt_info.exit_pt_flag=0;
  51   4                exit_pt_info.pt_cnt=0; 
  52   4        //        printf("SS changed!! \n");
  53   4              }
  54   3              exit_pt_info.ss_last = p_tx_receive_packet->msg[0];
C51 COMPILER V9.54   PING                                                                  03/19/2018 09:53:24 PAGE 2   

  55   3      
  56   3      #endif
  57   3              if(p_tx_receive_packet->msg[0]>5)
  58   3              {       
  59   4                tx_phase = TX_PHASE_IDCFG;
  60   4      #if FPDDET_EXITPT3TIMES_SUPPORT       
  61   4                if(exit_pt_info.exit_pt_flag!=0)    
  62   4                {
  63   5                  tx_phase = TX_PHASE_SELECT;
  64   5                  printf("to select\n");
  65   5                }
  66   4      #endif            
  67   4              }
  68   3              else              
  69   3              {
  70   4                Disable_coil_power();
  71   4                tx_phase = TX_PHASE_SELECT;  
  72   4                    break;
  73   4              }
  74   3            }
  75   2            else
  76   2            {
  77   3                    
  78   3                    tx_phase = TX_PHASE_SELECT;  
  79   3                    break;
  80   3            }
  81   2          }
  82   1          while(tx_phase == TX_PHASE_PING );
  83   1      
  84   1        if (tx_phase != TX_PHASE_IDCFG )
  85   1        {
  86   2      //    TIMER_1ms_ENABLE(DISABLE);
  87   2          Disable_coil_power();
  88   2      #if NEW_TEMPDET_SLOW_CHARGING   
  89   2          temp_slow_state = 0;
  90   2      #endif    
  91   2        }
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    410    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
